"""Create migration tables

Revision ID: dc57fb31be79
Revises: 
Create Date: 2024-10-10 09:15:49.661666

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from tckdb.backend.app.models.common import MsgpackExt

# revision identifiers, used by Alembic.
revision: str = 'dc57fb31be79'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model', sa.String(length=50), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('changes', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('performed_by', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_table('bot',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('version', sa.String(length=100), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.Column('git_commit', sa.String(length=500), nullable=True),
    sa.Column('git_branch', sa.String(length=100), nullable=True),
    sa.Column('reviewer_flags', MsgpackExt(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_bot_id'), 'bot', ['id'], unique=False)
    op.create_table('ess',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('version', sa.String(length=100), nullable=False),
    sa.Column('revision', sa.String(length=100), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.Column('reviewer_flags', MsgpackExt(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_ess_id'), 'ess', ['id'], unique=False)
    op.create_table('level',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('method', sa.String(length=500), nullable=False),
    sa.Column('basis', sa.String(length=500), nullable=True),
    sa.Column('auxiliary_basis', sa.String(length=500), nullable=True),
    sa.Column('dispersion', sa.String(length=500), nullable=True),
    sa.Column('grid', sa.String(length=500), nullable=True),
    sa.Column('level_arguments', sa.String(length=500), nullable=True),
    sa.Column('solvation_method', sa.String(length=500), nullable=True),
    sa.Column('solvent', sa.String(length=500), nullable=True),
    sa.Column('solvation_description', sa.String(length=1000), nullable=True),
    sa.Column('reviewer_flags', MsgpackExt(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_level_id'), 'level', ['id'], unique=False)
    op.create_table('literature',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=10), nullable=False),
    sa.Column('authors', sa.String(length=255), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('journal', sa.String(length=255), nullable=True),
    sa.Column('publisher', sa.String(length=255), nullable=True),
    sa.Column('volume', sa.Integer(), nullable=True),
    sa.Column('issue', sa.Integer(), nullable=True),
    sa.Column('page_start', sa.Integer(), nullable=True),
    sa.Column('page_end', sa.Integer(), nullable=True),
    sa.Column('editors', sa.String(length=255), nullable=True),
    sa.Column('edition', sa.String(length=50), nullable=True),
    sa.Column('chapter_title', sa.String(length=255), nullable=True),
    sa.Column('publication_place', sa.String(length=255), nullable=True),
    sa.Column('advisor', sa.String(length=255), nullable=True),
    sa.Column('doi', sa.String(length=255), nullable=True),
    sa.Column('isbn', sa.String(length=255), nullable=True),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('reviewer_flags', MsgpackExt(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_literature_id'), 'literature', ['id'], unique=False)
    op.create_table('lj',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sigma', MsgpackExt(), nullable=False),
    sa.Column('epsilon', MsgpackExt(), nullable=False),
    sa.Column('reviewer_flags', MsgpackExt(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lj_id'), 'lj', ['id'], unique=False)
    op.create_table('person',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('affiliation', sa.String(length=255), nullable=False),
    sa.Column('uploaded_species', sa.Integer(), nullable=True),
    sa.Column('uploaded_non_physical_species', sa.Integer(), nullable=True),
    sa.Column('uploaded_reactions', sa.Integer(), nullable=True),
    sa.Column('uploaded_networks', sa.Integer(), nullable=True),
    sa.Column('reviewed_species', sa.Integer(), nullable=True),
    sa.Column('reviewed_non_physical_species', sa.Integer(), nullable=True),
    sa.Column('reviewed_reactions', sa.Integer(), nullable=True),
    sa.Column('reviewed_networks', sa.Integer(), nullable=True),
    sa.Column('reviewer_flags', MsgpackExt(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_person_id'), 'person', ['id'], unique=False)
    op.create_table('trans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model', sa.String(length=100), nullable=False),
    sa.Column('parameters', MsgpackExt(), nullable=False),
    sa.Column('reviewer_flags', MsgpackExt(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trans_id'), 'trans', ['id'], unique=False)
    op.create_table('encorr',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level_id', sa.Integer(), nullable=False),
    sa.Column('supported_elements', postgresql.ARRAY(sa.String(), zero_indexes=True), nullable=False),
    sa.Column('energy_unit', sa.String(length=255), nullable=False),
    sa.Column('aec', MsgpackExt(), nullable=True),
    sa.Column('bac', MsgpackExt(), nullable=True),
    sa.Column('isodesmic_reactions', MsgpackExt(), nullable=True),
    sa.Column('isodesmic_high_level_id', sa.Integer(), nullable=True),
    sa.Column('reviewer_flags', MsgpackExt(), nullable=True),
    sa.ForeignKeyConstraint(['isodesmic_high_level_id'], ['level.id'], ),
    sa.ForeignKeyConstraint(['level_id'], ['level.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_encorr_id'), 'encorr', ['id'], unique=False)
    op.create_table('freq',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('factor', sa.Float(), nullable=False),
    sa.Column('level_id', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(length=255), nullable=False),
    sa.Column('reviewer_flags', MsgpackExt(), nullable=True),
    sa.ForeignKeyConstraint(['level_id'], ['level.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('level_id')
    )
    op.create_index(op.f('ix_freq_id'), 'freq', ['id'], unique=False)
    op.create_table('nonphysicalspecies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('retracted', sa.String(length=255), nullable=True),
    sa.Column('reviewed', sa.Boolean(), nullable=False),
    sa.Column('approved', sa.Boolean(), nullable=False),
    sa.Column('reviewer_flags', MsgpackExt(), nullable=True),
    sa.Column('smiles', sa.String(length=5000), nullable=False),
    sa.Column('inchi', sa.String(length=5000), nullable=False),
    sa.Column('inchi_key', sa.String(length=5000), nullable=False),
    sa.Column('charge', sa.Integer(), nullable=False),
    sa.Column('multiplicity', sa.Integer(), nullable=False),
    sa.Column('electronic_state', sa.String(length=150), nullable=False),
    sa.Column('coordinates', MsgpackExt(), nullable=False),
    sa.Column('graph', sa.String(length=100000), nullable=True),
    sa.Column('fragments', postgresql.ARRAY(sa.Integer(), zero_indexes=True), nullable=True),
    sa.Column('fragment_orientation', MsgpackExt(), nullable=True),
    sa.Column('chirality', MsgpackExt(), nullable=True),
    sa.Column('conformation_method', sa.String(length=500), nullable=False),
    sa.Column('is_well', sa.Boolean(), nullable=False),
    sa.Column('is_global_min', sa.Boolean(), nullable=False),
    sa.Column('global_min_geometry', MsgpackExt(), nullable=True),
    sa.Column('is_ts', sa.Boolean(), nullable=False),
    sa.Column('irc_trajectories', MsgpackExt(), nullable=True),
    sa.Column('literature_id', sa.Integer(), nullable=True),
    sa.Column('bot_id', sa.Integer(), nullable=True),
    sa.Column('opt_level_id', sa.Integer(), nullable=True),
    sa.Column('freq_level_id', sa.Integer(), nullable=True),
    sa.Column('scan_level_id', sa.Integer(), nullable=True),
    sa.Column('irc_level_id', sa.Integer(), nullable=True),
    sa.Column('sp_level_id', sa.Integer(), nullable=False),
    sa.Column('opt_ess_id', sa.Integer(), nullable=True),
    sa.Column('freq_ess_id', sa.Integer(), nullable=True),
    sa.Column('scan_ess_id', sa.Integer(), nullable=True),
    sa.Column('irc_ess_id', sa.Integer(), nullable=True),
    sa.Column('sp_ess_id', sa.Integer(), nullable=False),
    sa.Column('opt_path', sa.String(length=5000), nullable=True),
    sa.Column('freq_path', sa.String(length=5000), nullable=True),
    sa.Column('scan_paths', MsgpackExt(), nullable=True),
    sa.Column('irc_paths', MsgpackExt(), nullable=True),
    sa.Column('sp_path', sa.String(length=5000), nullable=False),
    sa.Column('unconverged_jobs', MsgpackExt(), nullable=True),
    sa.Column('extras', MsgpackExt(), nullable=True),
    sa.ForeignKeyConstraint(['bot_id'], ['bot.id'], ),
    sa.ForeignKeyConstraint(['freq_ess_id'], ['ess.id'], ),
    sa.ForeignKeyConstraint(['freq_level_id'], ['level.id'], ),
    sa.ForeignKeyConstraint(['irc_ess_id'], ['ess.id'], ),
    sa.ForeignKeyConstraint(['irc_level_id'], ['level.id'], ),
    sa.ForeignKeyConstraint(['literature_id'], ['literature.id'], ),
    sa.ForeignKeyConstraint(['opt_ess_id'], ['ess.id'], ),
    sa.ForeignKeyConstraint(['opt_level_id'], ['level.id'], ),
    sa.ForeignKeyConstraint(['scan_ess_id'], ['ess.id'], ),
    sa.ForeignKeyConstraint(['scan_level_id'], ['level.id'], ),
    sa.ForeignKeyConstraint(['sp_ess_id'], ['ess.id'], ),
    sa.ForeignKeyConstraint(['sp_level_id'], ['level.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nonphysicalspecies_id'), 'nonphysicalspecies', ['id'], unique=False)
    op.create_table('np_species_authors',
    sa.Column('np_species_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['person.id'], ),
    sa.ForeignKeyConstraint(['np_species_id'], ['nonphysicalspecies.id'], ),
    sa.PrimaryKeyConstraint('np_species_id', 'author_id')
    )
    op.create_table('np_species_reviewers',
    sa.Column('np_species_id', sa.Integer(), nullable=False),
    sa.Column('reviewer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['np_species_id'], ['nonphysicalspecies.id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['person.id'], ),
    sa.PrimaryKeyConstraint('np_species_id', 'reviewer_id')
    )
    op.create_table('species',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(length=255), nullable=True),
    sa.Column('statmech_software', sa.String(length=150), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('retracted', sa.String(length=255), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reviewed', sa.Boolean(), nullable=False),
    sa.Column('approved', sa.Boolean(), nullable=False),
    sa.Column('reviewer_flags', MsgpackExt(), nullable=True),
    sa.Column('smiles', sa.String(length=5000), nullable=False),
    sa.Column('inchi', sa.String(length=5000), nullable=False),
    sa.Column('inchi_key', sa.String(length=27), nullable=False),
    sa.Column('charge', sa.Integer(), nullable=False),
    sa.Column('multiplicity', sa.Integer(), nullable=False),
    sa.Column('electronic_state', sa.String(length=150), nullable=False),
    sa.Column('coordinates', MsgpackExt(), nullable=False),
    sa.Column('graph', sa.String(length=100000), nullable=True),
    sa.Column('fragments', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('fragment_orientation', MsgpackExt(), nullable=True),
    sa.Column('external_symmetry', sa.Integer(), nullable=False),
    sa.Column('point_group', sa.String(length=6), nullable=False),
    sa.Column('chirality', MsgpackExt(), nullable=True),
    sa.Column('conformation_method', sa.String(length=500), nullable=False),
    sa.Column('is_well', sa.Boolean(), nullable=False),
    sa.Column('is_global_min', sa.Boolean(), nullable=True),
    sa.Column('global_min_geometry', MsgpackExt(), nullable=True),
    sa.Column('is_ts', sa.Boolean(), nullable=False),
    sa.Column('irc_trajectories', MsgpackExt(), nullable=True),
    sa.Column('electronic_energy', sa.Float(), nullable=False),
    sa.Column('E0', sa.Float(), nullable=False),
    sa.Column('active_space', MsgpackExt(), nullable=True),
    sa.Column('hessian', MsgpackExt(), nullable=True),
    sa.Column('frequencies', postgresql.ARRAY(sa.Float(), dimensions=1, zero_indexes=True), nullable=True),
    sa.Column('scaled_projected_frequencies', postgresql.ARRAY(sa.Float(), dimensions=1, zero_indexes=True), nullable=False),
    sa.Column('normal_displacement_modes', MsgpackExt(), nullable=True),
    sa.Column('freq_id', sa.Integer(), nullable=True),
    sa.Column('rigid_rotor', sa.String(length=50), nullable=False),
    sa.Column('statmech_treatment', sa.String(length=50), nullable=True),
    sa.Column('rotational_constants', MsgpackExt(), nullable=True),
    sa.Column('torsions', MsgpackExt(), nullable=True),
    sa.Column('conformers', MsgpackExt(), nullable=True),
    sa.Column('H298', sa.Float(), nullable=False),
    sa.Column('S298', sa.Float(), nullable=False),
    sa.Column('Cp_values', postgresql.ARRAY(sa.Float(), dimensions=1, zero_indexes=True), nullable=False),
    sa.Column('Cp_T_list', postgresql.ARRAY(sa.Float(), dimensions=1, zero_indexes=True), nullable=False),
    sa.Column('heat_capacity_model', MsgpackExt(), nullable=True),
    sa.Column('encorr_id', sa.Integer(), nullable=True),
    sa.Column('literature_id', sa.Integer(), nullable=True),
    sa.Column('bot_id', sa.Integer(), nullable=True),
    sa.Column('opt_level_id', sa.Integer(), nullable=True),
    sa.Column('freq_level_id', sa.Integer(), nullable=True),
    sa.Column('scan_level_id', sa.Integer(), nullable=True),
    sa.Column('irc_level_id', sa.Integer(), nullable=True),
    sa.Column('sp_level_id', sa.Integer(), nullable=False),
    sa.Column('opt_ess_id', sa.Integer(), nullable=True),
    sa.Column('freq_ess_id', sa.Integer(), nullable=True),
    sa.Column('scan_ess_id', sa.Integer(), nullable=True),
    sa.Column('irc_ess_id', sa.Integer(), nullable=True),
    sa.Column('sp_ess_id', sa.Integer(), nullable=False),
    sa.Column('opt_path', sa.String(length=5000), nullable=True),
    sa.Column('freq_path', sa.String(length=5000), nullable=True),
    sa.Column('scan_paths', MsgpackExt(), nullable=True),
    sa.Column('irc_paths', MsgpackExt(), nullable=True),
    sa.Column('sp_path', sa.String(length=5000), nullable=False),
    sa.Column('unconverged_jobs', MsgpackExt(), nullable=True),
    sa.Column('extras', MsgpackExt(), nullable=True),
    sa.ForeignKeyConstraint(['bot_id'], ['bot.id'], ),
    sa.ForeignKeyConstraint(['encorr_id'], ['encorr.id'], ),
    sa.ForeignKeyConstraint(['freq_ess_id'], ['ess.id'], ),
    sa.ForeignKeyConstraint(['freq_id'], ['level.id'], ),
    sa.ForeignKeyConstraint(['freq_level_id'], ['level.id'], ),
    sa.ForeignKeyConstraint(['irc_ess_id'], ['ess.id'], ),
    sa.ForeignKeyConstraint(['irc_level_id'], ['level.id'], ),
    sa.ForeignKeyConstraint(['literature_id'], ['literature.id'], ),
    sa.ForeignKeyConstraint(['opt_ess_id'], ['ess.id'], ),
    sa.ForeignKeyConstraint(['opt_level_id'], ['level.id'], ),
    sa.ForeignKeyConstraint(['scan_ess_id'], ['ess.id'], ),
    sa.ForeignKeyConstraint(['scan_level_id'], ['level.id'], ),
    sa.ForeignKeyConstraint(['sp_ess_id'], ['ess.id'], ),
    sa.ForeignKeyConstraint(['sp_level_id'], ['level.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_species_id'), 'species', ['id'], unique=False)
    op.create_table('species_authors',
    sa.Column('species_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['person.id'], ),
    sa.ForeignKeyConstraint(['species_id'], ['species.id'], ),
    sa.PrimaryKeyConstraint('species_id', 'author_id')
    )
    op.create_table('species_reviewers',
    sa.Column('species_id', sa.Integer(), nullable=False),
    sa.Column('reviewer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['reviewer_id'], ['person.id'], ),
    sa.ForeignKeyConstraint(['species_id'], ['species.id'], ),
    sa.PrimaryKeyConstraint('species_id', 'reviewer_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('species_reviewers')
    op.drop_table('species_authors')
    op.drop_index(op.f('ix_species_id'), table_name='species')
    op.drop_table('species')
    op.drop_table('np_species_reviewers')
    op.drop_table('np_species_authors')
    op.drop_index(op.f('ix_nonphysicalspecies_id'), table_name='nonphysicalspecies')
    op.drop_table('nonphysicalspecies')
    op.drop_index(op.f('ix_freq_id'), table_name='freq')
    op.drop_table('freq')
    op.drop_index(op.f('ix_encorr_id'), table_name='encorr')
    op.drop_table('encorr')
    op.drop_index(op.f('ix_trans_id'), table_name='trans')
    op.drop_table('trans')
    op.drop_index(op.f('ix_person_id'), table_name='person')
    op.drop_table('person')
    op.drop_index(op.f('ix_lj_id'), table_name='lj')
    op.drop_table('lj')
    op.drop_index(op.f('ix_literature_id'), table_name='literature')
    op.drop_table('literature')
    op.drop_index(op.f('ix_level_id'), table_name='level')
    op.drop_table('level')
    op.drop_index(op.f('ix_ess_id'), table_name='ess')
    op.drop_table('ess')
    op.drop_index(op.f('ix_bot_id'), table_name='bot')
    op.drop_table('bot')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_table('audit_logs')
    # ### end Alembic commands ###
